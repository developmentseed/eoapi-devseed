version: '3'

services:

  # change to official image when available https://github.com/radiantearth/stac-browser/pull/386
  stac-browser:
    build:
      context: dockerfiles
      dockerfile: Dockerfile.browser
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8085:8085"
    depends_on:
      - stac
      - raster
      - database

  stac:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.stac
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8081:8081"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8081
      - WEB_CONCURRENCY=10
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
      # - EOAPI_STAC_TITILER_ENDPOINT=raster
      - EOAPI_STAC_TITILER_ENDPOINT=http://127.0.0.1:8082
      # PgSTAC extensions
      # - EOAPI_STAC_EXTENSIONS=["filter", "query", "sort", "fields", "pagination", "titiler", "transaction"]  # defaults
      # - EOAPI_STAC_CORS_METHODS='GET,POST,PUT,OPTIONS'
      # Auth controls
      # - EOAPI_AUTH_JWKS_URL=https://cognito-idp.us-east-1.amazonaws.com/us-east-1_{USER_POOL_ID}/.well-known/jwks.json
      # - EOAPI_AUTH_OAUTH2_TOKEN_URL=https://cognito-idp.us-east-1.amazonaws.com/us-east-1_{USER_POOL_ID}/oauth2/token
      # - EOAPI_AUTH_OAUTH2_AUTHORIZATION_URL=https://cognito-idp.us-east-1.amazonaws.com/us-east-1_{USER_POOL_ID}/oauth2/authorize
      # - EOAPI_AUTH_USE_PKCE=true
      # - EOAPI_AUTH_CLIENT_ID=XXXXXX
    depends_on:
      - database
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start.sh"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  raster:
    # At the time of writing, rasterio wheels are not available for arm64 arch
    # so we force the image to be built with linux/amd64
    platform: linux/amd64
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.raster
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8082:8082"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8082
      - WEB_CONCURRENCY=1
      - WORKERS_PER_CORE=1
      - MAX_WORKERS=10
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
      - CPL_TMPDIR=/tmp
      - GDAL_CACHEMAX=75%
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      - MOSAIC_CONCURRENCY=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - database
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start.sh"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  vector:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.vector
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8083:8083"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8083
      - WEB_CONCURRENCY=10
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
      - EOAPI_VECTOR_DEBUG=TRUE
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start.sh"
    depends_on:
      - database
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  database:
    image: ghcr.io/stac-utils/pgstac:v0.8.5
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGDATABASE=postgis
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:5439:5432"
    command: postgres -N 500
    volumes:
      - ./.pgdata:/var/lib/postgresql/data

networks:
  default:
    name: eoapi-network
